# This file is based on templates provided and copyrighted by Autodesk, Inc.
# This file has been modified by Epic Games, Inc. and is subject to the license
# file included in this repository.

keys:
# These are used by the Loader in Unreal
    ue_sg_asset_type:
        type: str
        shotgun_entity_type: Asset
        shotgun_field_name: sg_asset_type
    ue_sg_asset_name:
        type: str
        shotgun_entity_type: Asset
        shotgun_field_name: code
    ue_sg_shot_name:
        type: str
        shotgun_entity_type: Shot
        shotgun_field_name: code
    ue_sg_sequence_name:
        type: str
        shotgun_entity_type: Shot
        shotgun_field_name: sg_sequence
    # These are used by the Movie Publish in Unreal
    ue_level_sequence:
        type: str
    ue_world:
        type: str
    # Movie extension for UE, avi on Windows, mov on other platforms
    ue_mov_ext:
        type: str
        choices:
            mov: Quicktime Movie (.mov)
            avi: Audio Video Interleaved (.avi)

paths:
 #
    # Unreal
    #

    # level sequence review output from unreal
    unreal.movie_publish:
        definition: '[sequences/{Sequence}/][{Shot}/]editorial/{YYYY}_{MM}_{DD}/unreal/{ue_level_sequence}_{ue_world}.v{version}.{ue_mov_ext}'
    unreal_shot_publish:
        definition: '@shot_root/pub/unreal/{name}.v{version}.nk'
    # The location of FBX exports for Unreal
    unreal.maya_asset_fbx_publish:
        definition: '@asset_root/pub/fbx/{name}.v{version}.fbx'
    # The location of turntable review output rendered in Unreal
    unreal.maya_turntable_render:
        definition: '@asset_root/dev/images/{name}_turntable_v{version}.{ue_mov_ext}'
    unreal.maya_turntable_publish:
        definition: '@asset_root/review/{Asset}_{name}_turntable_v{version}.{ue_mov_ext}'
    # Placeholder location for static mesh assets exported from Unreal
    # Hook implementation intended to be a starting point for a pipeline
    # No context info used in template, developers expected to further customize
    unreal.asset_publish:
        definition: 'assets/unreal/exports/{YYYY}_{MM}_{DD}/{name}.fbx'
strings:
   # entity-specific templates for importing files into the Unreal content browser
    # template logic is defined in Python, not settings:
    # tk-unreal/hooks/tk-multi-loader2/tk-unreal_actions.py
    unreal_loader_asset_path: "/Game/Assets/AST/{ue_sg_asset_type}/{ue_sg_asset_name}/"
    unreal_loader_asset_name: "ASSET_{ue_sg_asset_name}_{name}"
    unreal_loader_shot_path: "/Game/Cinematics/Sequences/SEQ/{ue_sg_sequence_name}/{ue_sg_shot_name}/"
    unreal_loader_shot_name: "SHOT_{ue_sg_shot_name}_{name}"
    unreal_loader_project_path: "/Game/Assets/"
    unreal_loader_project_name: "PROJECT_{name}"
    
    # Assets (mesh, material, texture)
    unreal_loader_staticmesh_path: "/Game/Assets/SM/"
    unreal_loader_staticmesh_name: "SM_{name}"
    unreal_loader_skeletalmesh_path: "/Game/Assets/SK/"
    unreal_loader_skeletalmesh_name: "SK_{name}"
    unreal_loader_physicsasset_path: "/Game/Assets/PHYS/"
    unreal_loader_physicsasset_name: "PHYS_{name}"
    unreal_loader_material_path: "/Game/Assets/M/"
    unreal_loader_material_name: "M_{name}" # M_ 또는 MI_
    unreal_loader_texture_path: "/Game/Assets/T/"
    unreal_loader_texture_name: "T_{name}"

    # Assets (fur, fx)
    unreal_loader_fx_path: "/Game/Assets/NS/"
    unreal_loader_fx_name: "NS_{name}"
    unreal_loader_groom_path: "/Game/Assets/GR/"
    unreal_loader_groom_name: "GR_{name}" # 임의로 정함

    # Shot (animation sequence, performance capture)
    unreal_loader_animation_sq_path: "/Game/LevelSequence/{ue_sg_sequence_name}/{ue_sg_shot_name}/{ue_sg_shot_name}_char/AS"
    unreal_loader_animation_sq_name: "AS_{ue_sg_shot_name}"
    unreal_loader_performancecapture_path: "/Game/LevelSequence/{ue_sg_sequence_name}/{ue_sg_shot_name}/{ue_sg_shot_name}_char/PC"
    unreal_loader_performancecapture_name: "PC_{ue_sg_shot_name}"
    # 애니 데이터가 SQ에 들어가야 하는지 Asset에 들어가야 하는지 잘 모르겠음